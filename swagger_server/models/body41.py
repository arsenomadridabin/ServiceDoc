# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Body41(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, token: str=None, reference: str=None, client_id: str=None):  # noqa: E501
        """Body41 - a model defined in Swagger

        :param token: The token of this Body41.  # noqa: E501
        :type token: str
        :param reference: The reference of this Body41.  # noqa: E501
        :type reference: str
        :param client_id: The client_id of this Body41.  # noqa: E501
        :type client_id: str
        """
        self.swagger_types = {
            'token': str,
            'reference': str,
            'client_id': str
        }

        self.attribute_map = {
            'token': 'token',
            'reference': 'reference',
            'client_id': 'client_id'
        }
        self._token = token
        self._reference = reference
        self._client_id = client_id

    @classmethod
    def from_dict(cls, dikt) -> 'Body41':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The body_41 of this Body41.  # noqa: E501
        :rtype: Body41
        """
        return util.deserialize_model(dikt, cls)

    @property
    def token(self) -> str:
        """Gets the token of this Body41.


        :return: The token of this Body41.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token: str):
        """Sets the token of this Body41.


        :param token: The token of this Body41.
        :type token: str
        """
        if token is None:
            raise ValueError("Invalid value for `token`, must not be `None`")  # noqa: E501

        self._token = token

    @property
    def reference(self) -> str:
        """Gets the reference of this Body41.


        :return: The reference of this Body41.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference: str):
        """Sets the reference of this Body41.


        :param reference: The reference of this Body41.
        :type reference: str
        """

        self._reference = reference

    @property
    def client_id(self) -> str:
        """Gets the client_id of this Body41.


        :return: The client_id of this Body41.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id: str):
        """Sets the client_id of this Body41.


        :param client_id: The client_id of this Body41.
        :type client_id: str
        """

        self._client_id = client_id
