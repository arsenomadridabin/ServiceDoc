# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Body9(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, token: str=None, sc_no: str=None, consumer_id: str=None, office_code: str=None, reference: str=None):  # noqa: E501
        """Body9 - a model defined in Swagger

        :param token: The token of this Body9.  # noqa: E501
        :type token: str
        :param sc_no: The sc_no of this Body9.  # noqa: E501
        :type sc_no: str
        :param consumer_id: The consumer_id of this Body9.  # noqa: E501
        :type consumer_id: str
        :param office_code: The office_code of this Body9.  # noqa: E501
        :type office_code: str
        :param reference: The reference of this Body9.  # noqa: E501
        :type reference: str
        """
        self.swagger_types = {
            'token': str,
            'sc_no': str,
            'consumer_id': str,
            'office_code': str,
            'reference': str
        }

        self.attribute_map = {
            'token': 'token',
            'sc_no': 'sc_no',
            'consumer_id': 'consumer_id',
            'office_code': 'office_code',
            'reference': 'reference'
        }
        self._token = token
        self._sc_no = sc_no
        self._consumer_id = consumer_id
        self._office_code = office_code
        self._reference = reference

    @classmethod
    def from_dict(cls, dikt) -> 'Body9':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The body_9 of this Body9.  # noqa: E501
        :rtype: Body9
        """
        return util.deserialize_model(dikt, cls)

    @property
    def token(self) -> str:
        """Gets the token of this Body9.


        :return: The token of this Body9.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token: str):
        """Sets the token of this Body9.


        :param token: The token of this Body9.
        :type token: str
        """
        if token is None:
            raise ValueError("Invalid value for `token`, must not be `None`")  # noqa: E501

        self._token = token

    @property
    def sc_no(self) -> str:
        """Gets the sc_no of this Body9.


        :return: The sc_no of this Body9.
        :rtype: str
        """
        return self._sc_no

    @sc_no.setter
    def sc_no(self, sc_no: str):
        """Sets the sc_no of this Body9.


        :param sc_no: The sc_no of this Body9.
        :type sc_no: str
        """

        self._sc_no = sc_no

    @property
    def consumer_id(self) -> str:
        """Gets the consumer_id of this Body9.


        :return: The consumer_id of this Body9.
        :rtype: str
        """
        return self._consumer_id

    @consumer_id.setter
    def consumer_id(self, consumer_id: str):
        """Sets the consumer_id of this Body9.


        :param consumer_id: The consumer_id of this Body9.
        :type consumer_id: str
        """

        self._consumer_id = consumer_id

    @property
    def office_code(self) -> str:
        """Gets the office_code of this Body9.


        :return: The office_code of this Body9.
        :rtype: str
        """
        return self._office_code

    @office_code.setter
    def office_code(self, office_code: str):
        """Sets the office_code of this Body9.


        :param office_code: The office_code of this Body9.
        :type office_code: str
        """

        self._office_code = office_code

    @property
    def reference(self) -> str:
        """Gets the reference of this Body9.


        :return: The reference of this Body9.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference: str):
        """Sets the reference of this Body9.


        :param reference: The reference of this Body9.
        :type reference: str
        """

        self._reference = reference
