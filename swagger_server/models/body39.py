# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Body39(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, token: str=None, policy_number: str=None, dob: str=None):  # noqa: E501
        """Body39 - a model defined in Swagger

        :param token: The token of this Body39.  # noqa: E501
        :type token: str
        :param policy_number: The policy_number of this Body39.  # noqa: E501
        :type policy_number: str
        :param dob: The dob of this Body39.  # noqa: E501
        :type dob: str
        """
        self.swagger_types = {
            'token': str,
            'policy_number': str,
            'dob': str
        }

        self.attribute_map = {
            'token': 'token',
            'policy_number': 'policy_number',
            'dob': 'dob'
        }
        self._token = token
        self._policy_number = policy_number
        self._dob = dob

    @classmethod
    def from_dict(cls, dikt) -> 'Body39':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The body_39 of this Body39.  # noqa: E501
        :rtype: Body39
        """
        return util.deserialize_model(dikt, cls)

    @property
    def token(self) -> str:
        """Gets the token of this Body39.


        :return: The token of this Body39.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token: str):
        """Sets the token of this Body39.


        :param token: The token of this Body39.
        :type token: str
        """
        if token is None:
            raise ValueError("Invalid value for `token`, must not be `None`")  # noqa: E501

        self._token = token

    @property
    def policy_number(self) -> str:
        """Gets the policy_number of this Body39.


        :return: The policy_number of this Body39.
        :rtype: str
        """
        return self._policy_number

    @policy_number.setter
    def policy_number(self, policy_number: str):
        """Sets the policy_number of this Body39.


        :param policy_number: The policy_number of this Body39.
        :type policy_number: str
        """

        self._policy_number = policy_number

    @property
    def dob(self) -> str:
        """Gets the dob of this Body39.


        :return: The dob of this Body39.
        :rtype: str
        """
        return self._dob

    @dob.setter
    def dob(self, dob: str):
        """Sets the dob of this Body39.


        :param dob: The dob of this Body39.
        :type dob: str
        """

        self._dob = dob
