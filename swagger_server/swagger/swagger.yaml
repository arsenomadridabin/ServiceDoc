openapi: 3.0.0
info:
  title: Khalti_API
  description: Khalti_API
  version: "1.0"
servers:
- url: http://service.khalti.com
- url: https://services.khalti.com
tags:
- name: Single Request APIs
- name: Multi Request APIs
paths:
  /api/use/khalti-topup/:
    post:
      tags:
      - Single Request APIs
      description: Lets a user to topup Khalti account
      operationId: api_use_khalti_topup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topup'
        required: true
      responses:
        200:
          description: Successfully topuped khalti
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/ntc/:
    post:
      tags:
      - Single Request APIs
      description: Lets a user to topup NTC
      operationId: api_use_ntc_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topup'
        required: true
      responses:
        200:
          description: Successfully topup NTC
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/ncell/:
    post:
      tags:
      - Single Request APIs
      description: Lets a user to topup Ncell
      operationId: api_use_ncell_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topup'
        required: true
      responses:
        200:
          description: Ncell topup successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/smartcell/:
    post:
      tags:
      - Single Request APIs
      description: Lets a user to topup Smartcell
      operationId: api_use_smartcell_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topup'
        required: true
      responses:
        200:
          description: Smartcell topup successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/{method}/:
    post:
      tags:
      - Single Request APIs
      description: Please use the follwing methods " dishhome-erc, ntc-erc, utl-erc,
        smart-erc, broadlink-erc "
      operationId: api_use_method_post
      parameters:
      - name: method
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        200:
          description: Pin generated successfully.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/landline/:
    post:
      tags:
      - Single Request APIs
      description: Lets a user make payment for landline
      operationId: api_use_landline_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topup'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/simtv/:
    post:
      tags:
      - Single Request APIs
      description: Lets a user make payment for landline. <br> Use amount from 50
        to 50000 <br/>
      operationId: api_use_simtv_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/cleartv/:
    post:
      tags:
      - Single Request APIs
      description: "ClearTv Payment.\n  \n"
      operationId: api_use_cleartv_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_2'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/adsl-ul/:
    post:
      tags:
      - Single Request APIs
      description: Lets a user make payment for adsl unlimited. <br> Valid Amounts
        for both unlimited & volume based "500, 1000, 1500, 2000, 2500, 3000, 4000,
        5000" <br/>
      operationId: api_use_adsl_ul_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topup'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/subisu/:
    post:
      tags:
      - Single Request APIs
      description: |
        Lets a user make payment for Subisu.

        Amount should be between 400 and 15000 inclusive
      operationId: api_use_subisu_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Internet'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/websurfer-topup/:
    post:
      tags:
      - Single Request APIs
      description: Lets a user make payment for Websurfer.
      operationId: api_use_websurfer_topup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Internet'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/sky-topup/:
    post:
      tags:
      - Single Request APIs
      description: Lets a user make payment for Sky topup.
      operationId: api_use_sky_topup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Internet'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/virtual-network/:
    post:
      tags:
      - Single Request APIs
      description: |
        Lets a user make payment for Virtual Network.

        Amount should be greater than or equal to 100
      operationId: api_use_virtual_network_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/web-network/:
    post:
      tags:
      - Single Request APIs
      description: |
        Lets a user make payment for Web Network.

        Amount should be greater than or equal to 100
      operationId: api_use_web_network_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/royal-network/:
    post:
      tags:
      - Single Request APIs
      description: |
        Lets a user make payment for Royal Network.

        Amount should be greater than or equal to 100
      operationId: api_use_royal_network_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/hons/:
    post:
      tags:
      - Single Request APIs
      description: |
        Lets a user make payment for Hons.

        Amount should be greater than or equal to 100
      operationId: api_use_hons_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/pokhara-internet/:
    post:
      tags:
      - Single Request APIs
      description: |
        Lets a user make payment for Pokhara Internet.
      operationId: api_use_pokhara_internet_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_3'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/alisha-communication/:
    post:
      tags:
      - Single Request APIs
      description: Lets a user make payment for Alisha Communication.
      operationId: api_use_alisha_communication_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_4'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/infonet-communication/:
    post:
      tags:
      - Single Request APIs
      description: Lets a user make payment for infonet Communication.
      operationId: api_use_infonet_communication_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_5'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/metrolink/:
    post:
      tags:
      - Single Request APIs
      description: Lets a user make payment for metrolink.
      operationId: api_use_metrolink_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_6'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/use/{service_slug}/:
    post:
      tags:
      - Single Request APIs
      summary: Capital Share
      description: "Lets a user make payment for Capital Share. \n\ni) Sunrise Capital\
        \ API (demat-sunrise/meroshare-sunrise) <br>\nii) Laxmi Capital API (demat-laxmi/meroshare-laxmi)\
        \ <br>\niii) BOK Capital API (demat-bok/meroshare-bok)  <br>\niv) Sanima Capital\
        \ API (demat-sanima/meroshare-sanima) <br>\nv) Prabhu Capital (demat-prabhu/meroshare-prabhu)\
        \ <br>\nvi) NIC Asia Capital (demat-nicasia/meroshare-nicasia)  <br>\n   \
        \       \nNote; Choose service_slug from above data. Ex; service_slug of\n\
        Sunrise Capital Demat is “demat-sunrise”\n"
      operationId: api_use_service_slug_post
      parameters:
      - name: service_slug
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_7'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.single_request_ap_is_controller
  /api/servicegroup/counters/nea/:
    post:
      tags:
      - Multi Request APIs
      description: Details of electricity counters
      operationId: api_servicegroup_counters_nea_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_8'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/details/nea/:
    post:
      tags:
      - Multi Request APIs
      description: "Details of customer.\n\noffice code = one of the ’value’ fields\
        \ of the response from counters \ndetails\n"
      operationId: api_servicegroup_details_nea_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_9'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/servicecharge/nea/:
    post:
      tags:
      - Multi Request APIs
      description: "Get service charge Nea. \n\nsession_id = value obtained during\
        \ customer detail\n"
      operationId: api_servicegroup_servicecharge_nea_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_10'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/commit/nea/:
    post:
      tags:
      - Multi Request APIs
      description: "Payment for Nea. \n\nsession_id = value obtained during customer\
        \ detail\n"
      operationId: api_servicegroup_commit_nea_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_11'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/counters/khanepani/:
    post:
      tags:
      - Multi Request APIs
      description: Details of Khanepani counters
      operationId: api_servicegroup_counters_khanepani_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_12'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/details/khanepani/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Details of customer.

        counter = < one of the ‘value’ fields from Counter detail >
      operationId: api_servicegroup_details_khanepani_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_13'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/lookup/dishhome/:
    get:
      tags:
      - Multi Request APIs
      description: |
        Customer / CAS ID details
      operationId: api_lookup_dishhome_get
      parameters:
      - name: token
        in: query
        description: Please enter your token
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: casid
        in: query
        description: Enter consumer cas id.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Request Success
          content:
            application/json:
              schema:
                required:
                - token
                type: object
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/use/dishhome/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Lets a user make payment for Dishhome. <br>
        Valid Amounts
        300, 350, 400, 500, 600, 700, 1000, 2000, 3000, 4000, 5000, 6000, 7000
      operationId: api_use_dishhome_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_14'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/details/merotv/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Details of merotv client
      operationId: api_servicegroup_details_merotv_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_15'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/commit/merotv/:
    post:
      tags:
      - Multi Request APIs
      description: |
        MeroTv Payment.

        “session_id” > “session_id return during detail step”

        “package_id” > “<package_id from details step>”
      operationId: api_servicegroup_commit_merotv_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_16'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/details/worldlink/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Details of Worldlink.
      operationId: api_servicegroup_details_worldlink_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_17'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/commit/worldlink/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment for worldlink.

        payment_type = <’Advanced’ or ‘Normal’>,
      operationId: api_servicegroup_commit_worldlink_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_18'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/details/vianet/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Details of Vianet
      operationId: api_servicegroup_details_vianet_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_19'
        required: true
      responses:
        200:
          description: Request Success
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/commit/vianet/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment for Vianet.

        session_id = <Session id, as obtained in details step> <br>
        customer_id = <Customer Id, same as in details step>  <br>
        payment_id = <Payment Id, as obtained in details step> <br>
      operationId: api_servicegroup_commit_vianet_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_20'
        required: true
      responses:
        200:
          description: Request Success.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/details/classitech/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment details for classictech.
      operationId: api_servicegroup_details_classitech_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_21'
        required: true
      responses:
        200:
          description: Request Success
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/commit/classitech/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment for Classictech.

        session_id > “session id from detail step” <br>
        amount > “amount from details step” <br>
        month > “select month from detail step” <br>
        package > “select package from previous step” <br>
      operationId: api_servicegroup_commit_classitech_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_22'
        required: true
      responses:
        200:
          description: Request success.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/details/arrownet/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Details for arrownet.
      operationId: api_servicegroup_details_arrownet_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_23'
        required: true
      responses:
        200:
          description: Request success.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/commit/arrownet/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment for arrownet.
      operationId: api_servicegroup_commit_arrownet_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_24'
        required: true
      responses:
        200:
          description: Request success.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/details/websurfer/:
    post:
      tags:
      - Multi Request APIs
      summary: SKY CABLE TV AND TOPUP
      description: |
        Details for Skytv and Internet.
        stb/username = Unique setupbox number/ username <br>
        ‘service’ = ‘sky-tv (For TV) / sky-internet (For Internet)’
      operationId: api_servicegroup_details_websurfer_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_25'
        required: true
      responses:
        200:
          description: Request success.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/commit/websurfer/:
    post:
      tags:
      - Multi Request APIs
      summary: SKY CABLE TV AND TOPUP
      description: |
        Payment for Sky tv and Internet.

        ‘session_id' = ‘<session_id returned during user lookup>’, <br>
        ‘code’ = ‘<code associated with the package (see in User lookup Response)>’, <br>
        ‘service’ = ‘sky-tv (For TV) / sky-internet (For Internet)’
      operationId: api_servicegroup_commit_websurfer_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_26'
        required: true
      responses:
        200:
          description: Request success.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/details/techminds/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Details for Techmind.
      operationId: api_servicegroup_details_techminds_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_27'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/commit/techminds/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment for Techmind.

        ‘session_id' = ‘<session_id returned during user lookup>’, <br>
      operationId: api_servicegroup_commit_techminds_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_28'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/search/midas/:
    get:
      tags:
      - Multi Request APIs
      description: |
        Details for Midas.
      operationId: api_servicegroup_search_midas_get
      parameters:
      - name: token
        in: query
        description: Please enter your token
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: number
        in: query
        description: Enter your number.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: reference
        in: query
        description: Reference must be unique
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Request Success
          content:
            application/json:
              schema:
                required:
                - token
                type: object
                x-content-type: application/json
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/getpackages/midas/:
    post:
      tags:
      - Multi Request APIs
      summary: Midas Package Listing API
      description: |
        Packet Listing for Midas.

        ‘session_id' = ‘<session_id returned during seatch step>’, <br>
      operationId: api_servicegroup_getpackages_midas_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_29'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/getpackagerates/midas/:
    post:
      tags:
      - Multi Request APIs
      summary: MIDAS PACKAGE RATE API
      description: |
        Package Rate for Midas.

        ‘session_id' = ‘<session_id returned during seatch step>’, <br>
        “package_id” = “the id of package from previous step”, <br>
        “number_of_days” = “number of days from previous step”
      operationId: api_servicegroup_getpackagerates_midas_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_30'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/commit/midas/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment for Midas.

        ‘session_id' = ‘<session_id returned during seatch step>’, <br>
        “package_code” = “package code from previous step”
      operationId: api_servicegroup_commit_midas_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_31'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/products/kaspersky/:
    get:
      tags:
      - Multi Request APIs
      description: |
        Details for Kaspersky.
      operationId: api_products_kaspersky_get
      parameters:
      - name: token
        in: query
        description: Please enter your token
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Request Success
          content:
            application/json:
              schema:
                required:
                - token
                type: object
                x-content-type: application/json
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/use/kaspersky/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment for Kaspersky.
      operationId: api_use_kaspersky_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_32'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/details/neco-insurance/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Details of Insurance Plan.

        "insurance_slug" = "neco-insurance"
      operationId: api_servicegroup_details_neco_insurance_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_33'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/commit/neco-insurance/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment of Insurance Plan.

        "insurance_slug" = "neco-insurance" <br>
        ‘policy_type’ = Fresh OR Renew      <br>
        ‘policy_category’ = Any one value from categories above   <br>
        ‘reference_identifier’ = unique identifier for each request <br>
        ‘service_name’ = ‘neco-insurance’,
      operationId: api_servicegroup_commit_neco_insurance_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_34'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroups/details/sagarmatha-insurance/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Details of Insurance Plan.
      operationId: api_servicegroups_details_sagarmatha_insurance_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_35'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroups/commit/sagarmatha-insurance/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment of Insurance Plan.

        session_id = session_id returned during user lookup
      operationId: api_servicegroups_commit_sagarmatha_insurance_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_36'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/details/arhant-insurances/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Details of Insurance Plan.

        Note = Below is the list of Insurances under Arhant and their insurance_slug

        Premier Insurance = premier-insurance (TEST now only available for this)
        Prudential Insurance = prudential-insurance
        United Insurance = united-insurance
        National Insurance = national-insurance
        NLG Insurance = nlg-insurance
          …..others to be added
      operationId: api_servicegroup_details_arhant_insurances_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_37'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/commit/arhant-insurances/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment of Insurance Plan.
      operationId: api_servicegroup_commit_arhant_insurances_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_38'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/details/reliance-insurance/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Detail of Insurance Plan.

        “dob” = “YYYY-MM-DD”
      operationId: api_servicegroup_details_reliance_insurance_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_39'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/commit/reliance-insurance/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment of Insurance Plan.

        “transaction_id” = “transaction id from details step”,
      operationId: api_servicegroup_commit_reliance_insurance_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_40'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/details/nabil-invest/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment of Insurance Plan.
      operationId: api_servicegroup_details_nabil_invest_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_41'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/commit/nabil-invest/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment of Insurance Plan.

        “session_id” = “session_id from previous step”,
      operationId: api_servicegroup_commit_nabil_invest_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_42'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/sectors/flight/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Details of FLight

        “session_id” = “session_id from previous step”,
      operationId: api_servicegroup_sectors_flight_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_43'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/search/flight/:
    get:
      tags:
      - Multi Request APIs
      description: |
        Search FLight
      operationId: api_servicegroup_search_flight_get
      parameters:
      - name: token
        in: query
        description: Enter your token.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: reference
        in: query
        description: Reference must be unique
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: flight_type
        in: query
        description: One of the flight type ‘D’ for domestic and ‘I’ for international.
          (mandatory).
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: trip_type
        in: query
        description: One of the trip type  ‘O’ for one way and ‘R’ for return. (mandatory).
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: flight_date
        in: query
        description: YYYY-MM-DD (mandatory).
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: return_date
        in: query
        description: YYYY-MM-DD
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nationality
        in: query
        description: Country code of the passenger(NP for Nepal)
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: adult
        in: query
        description: Number of Adults.
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: child
        in: query
        description: Number of Children.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: infant
        in: query
        description: Number of Infant
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: from
        in: query
        description: Origin Sector code explained below, e.g. ‘PKR’  for Pokhara
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: to
        in: query
        description: Destination Sector code
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/book/flight/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Details of FLight

        Flight id = one of the flight_ids from search response in/outbound list <br>
        Booking_id = value of booking_id from search response
      operationId: api_servicegroup_book_flight_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_44'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/addinfo/flight/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Add passenger details for FLight

        Booking_id = value of booking_id from search response  <br>
        type =  ADULT, CHILD or INFANT <br>
        title = MR, MRS or MS, <br>
        gender = M or F  <br>
      operationId: api_servicegroup_addinfo_flight_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_45'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/issue/flight/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment of FLight

        Flight id = one of the flight_ids from search response in/outbound list <br>
        Booking_id = value of booking_id from search response
      operationId: api_servicegroup_issue_flight_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_46'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/cancel/flight/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment of FLight

        cancel_tickets =["ticketnumber"] #Separate by comma for multiple tickets
        Booking_id = value of booking_id from search response
      operationId: api_servicegroup_cancel_flight_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_47'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/download/{id}:
    get:
      tags:
      - Multi Request APIs
      description: |
        Search FLight
      operationId: api_download_id_get
      parameters:
      - name: id
        in: path
        description: Enter id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: token
        in: query
        description: Enter your token.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: is_base64
        in: query
        description: If "True" return base64 encoded data. (Optinal)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Request Success.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/search/movie/:
    get:
      tags:
      - Multi Request APIs
      description: |
        Search FLight
      operationId: api_servicegroup_search_movie_get
      parameters:
      - name: token
        in: query
        description: Enter your token.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/showinfo/movie/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Movie show information.
      operationId: api_servicegroup_showinfo_movie_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_48'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/seatsinfo/movie/:
    post:
      tags:
      - Multi Request APIs
      description: "Movie seat information.\n  \nshow_id = one of the show_id values\
        \ obtained in search <br>\nticket_type_id = ticket_type_id values obtained\
        \ in showinfo <br>\nold_session_id = leave it empty or set some value. Read\
        \ NOTE that follows\n\nNOTE This api will return a new session_id if ‘old_session’\
        \ is not set. \nIf set, this will not returnnew session_id and is used for\
        \ changing the price levels of the auditorim\n<br>\nExample Auditorium 1 of\
        \ a theatre can have ‘Gold seats’ and ‘Premium seats’,\nsetting old_session\
        \ will allow switching between the seats without creating new session.\n"
      operationId: api_servicegroup_seatsinfo_movie_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_49'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/selectseat/movie/:
    post:
      tags:
      - Multi Request APIs
      description: |
        To select seat.

        seat_id =  seat_id of the seat to be unselected <br>
        session_id = value obtained during seatsinfo step
      operationId: api_servicegroup_selectseat_movie_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_50'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/unselectseat/movie/:
    post:
      tags:
      - Multi Request APIs
      description: |
        To unselect seat.

        seat_id =  seat_id of the seat to be unselected <br>
        session_id = value obtained during seatsinfo step
      operationId: api_servicegroup_unselectseat_movie_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_51'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/cancel/movie/:
    post:
      tags:
      - Multi Request APIs
      description: |
        To cancel all the seats.

        session_id = value obtained during seatsinfo step
      operationId: api_servicegroup_cancel_movie_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_52'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/commit/movie/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Payment for the movie.

        session_id = value obtained during seatsinfo step
      operationId: api_servicegroup_commit_movie_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_53'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/downloadticket/movie/:
    post:
      tags:
      - Multi Request APIs
      description: |
        Download ticket.

        session_id = value obtained during seatsinfo step
      operationId: api_servicegroup_downloadticket_movie_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_54'
        required: true
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
  /api/servicegroup/search/hotel/:
    get:
      tags:
      - Multi Request APIs
      description: |
        Search Hotel

        session_id = value obtained during seatsinfo step
      operationId: api_servicegroup_search_hotel_get
      parameters:
      - name: token
        in: query
        description: Enter your token.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: reference
        in: query
        description: Reference must be unique
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: rooms
        in: query
        description: Number of rooms.
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: checkin_date
        in: query
        description: YYYY-MM-DD
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: checkout_date
        in: query
        description: YYYY-MM-DD
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: adult
        in: query
        description: Number of Adults.
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: child
        in: query
        description: Number of Children.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: city
        in: query
        description: Name of city.
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - Lalitpur
          - Biratnagar
          - Dharan Nepal
          - Nepalgunj
          - Chitwan
          - Nagarkot
          - Lumbini
          - Pokhara
          - Hetauda
          - Kathmandu
          - Dhulikhel
          - Janakpur
          - Birgunj
          - Birtamod
          - Itahari
          - Bhaktapur
          - Butwal
          - Dhangadhi
          - Kakarvitta
      responses:
        200:
          description: Request Successful.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-openapi-router-controller: swagger_server.controllers.multi_request_ap_is_controller
components:
  schemas:
    Topup:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        amount:
          type: integer
        number:
          type: string
    Internet:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        amount:
          type: integer
        number:
          type: string
        customer_id:
          type: string
    Network:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        username:
          type: string
        mobile_number:
          type: string
        amount:
          type: integer
        reference:
          type: string
    inline_response_400:
      type: object
      properties:
        message:
          type: string
    body:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        amount:
          type: integer
    body_1:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        amount:
          type: integer
        customer_id:
          type: string
    body_2:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        number:
          type: string
        customer_id:
          type: string
        amount:
          type: integer
        reference:
          type: string
    body_3:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        amount:
          type: integer
        username:
          type: string
        number:
          type: string
        address:
          type: string
    body_4:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        amount:
          type: integer
        username:
          type: string
        number:
          type: string
    body_5:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        amount:
          type: integer
        username:
          type: string
        mobile_number:
          type: string
        address:
          type: string
    body_6:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        amount:
          type: integer
        username:
          type: string
        mobile_number:
          type: string
        address:
          type: string
    body_7:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        full_name:
          type: string
        amount:
          type: integer
        mobile_number:
          type: string
        reference:
          type: string
    body_8:
      required:
      - token
      type: object
      properties:
        token:
          type: string
    body_9:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        sc_no:
          type: string
        consumer_id:
          type: string
        office_code:
          type: string
        reference:
          type: string
    inline_response_400_1:
      type: object
      properties:
        sc_no:
          type: string
        consumer_id:
          type: string
        office_code:
          type: string
    body_10:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        amount:
          type: integer
        session_id:
          type: string
    body_11:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        amount:
          type: integer
        session_id:
          type: string
    body_12:
      required:
      - token
      type: object
      properties:
        token:
          type: string
    body_13:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        month_id:
          type: string
        customer_code:
          type: string
        counter:
          type: string
        reference:
          type: string
    body_14:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        amount:
          type: integer
        casid:
          type: string
    body_15:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        smartcard_id:
          type: string
    body_16:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        package_id:
          type: string
        session_id:
          type: string
        amount:
          type: integer
    body_17:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        username:
          type: string
        reference:
          type: string
    body_18:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        username:
          type: string
        reference:
          type: string
        amount:
          type: integer
        payment_type:
          type: string
        option_id:
          type: string
        plan_category_id:
          type: string
    body_19:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        customer_id:
          type: string
        reference:
          type: string
    body_20:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        customer_id:
          type: string
        session_id:
          type: string
        payment_id:
          type: string
    body_21:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        username:
          type: string
    body_22:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        session_id:
          type: string
        amount:
          type: integer
        month:
          type: string
        package:
          type: string
    body_23:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        username:
          type: string
    body_24:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        username:
          type: string
        amount:
          type: integer
        duration:
          type: string
    body_25:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        customer_id:
          type: string
        stb/username:
          type: string
        service:
          type: string
    body_26:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        session_id:
          type: string
        amount:
          type: integer
        code:
          type: string
        service:
          type: string
    body_27:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        request_id:
          type: string
    body_28:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        session_id:
          type: string
        request_id:
          type: string
    body_29:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        session_id:
          type: string
        class_id:
          type: string
    body_30:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        session_id:
          type: string
        package_id:
          type: string
        number_of_days:
          type: string
    body_31:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        session_id:
          type: string
        package_code:
          type: string
    body_32:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        amount:
          type: integer
        value:
          type: string
    body_33:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        insurance_slug:
          type: string
    body_34:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        insurance_slug:
          type: string
        policy_type:
          type: string
        customer_name:
          type: string
        policy_category:
          type: string
        amount:
          type: integer
        reference_identifier:
          type: string
        policy_number:
          type: string
        mobile_number:
          type: string
        service_name:
          type: string
    body_35:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        debit_note_no:
          type: string
        reference:
          type: string
    body_36:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        session_id:
          type: string
        amount:
          type: integer
    body_37:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        request_id:
          type: string
        insurance_slug:
          type: string
    body_38:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        request_id:
          type: string
        amount:
          type: integer
        insurance_slug:
          type: string
        reference:
          type: string
    body_39:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        policy_number:
          type: string
        dob:
          type: string
    body_40:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        amount:
          type: integer
        policy_no:
          type: string
        transaction_id:
          type: string
    body_41:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        client_id:
          type: string
    body_42:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        session_id:
          type: string
        amount:
          type: integer
    body_43:
      required:
      - token
      type: object
      properties:
        token:
          type: string
    body_44:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        flight_id:
          type: string
        return_flight_id:
          type: string
        booking_id:
          type: string
    apiservicegroupaddinfoflight_passengers:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        type:
          type: string
          enum:
          - ADULT
          - CHILD
          - INFANT
        title:
          type: string
          enum:
          - Mr
          - MS
          - MRS
        gender:
          type: string
          enum:
          - M
          - F
    body_45:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        contact_name:
          type: string
        contact_phone:
          type: string
        booking_id:
          type: string
        passengers:
          type: array
          items:
            $ref: '#/components/schemas/apiservicegroupaddinfoflight_passengers'
    body_46:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        flight_id:
          type: string
        booking_id:
          type: string
    body_47:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        cancel_tickets:
          type: string
        booking_id:
          type: string
    body_48:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        show_id:
          type: string
    body_49:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        reference:
          type: string
        show_id:
          type: string
        ticket_type_id:
          type: string
        old_session_id:
          type: string
    body_50:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        session_id:
          type: string
        seat_id:
          type: string
    body_51:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        session_id:
          type: string
        seat_id:
          type: string
    body_52:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        session_id:
          type: string
    body_53:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        session_id:
          type: string
    body_54:
      required:
      - token
      type: object
      properties:
        token:
          type: string
        session_id:
          type: string
  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_400'
  parameters:
    Token:
      name: token
      in: query
      description: Enter your token.
      required: true
      style: form
      explode: true
      schema:
        type: string
    Reference:
      name: reference
      in: query
      description: Reference must be unique
      required: true
      style: form
      explode: true
      schema:
        type: string
    Adult:
      name: adult
      in: query
      description: Number of Adults.
      required: true
      style: form
      explode: true
      schema:
        type: integer
    Child:
      name: child
      in: query
      description: Number of Children.
      required: false
      style: form
      explode: true
      schema:
        type: integer

